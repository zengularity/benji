version: 2.1

commands:
  setup_sbt:
    description: Get and install SBT
    parameters:
      sbt_version:
        type: string
        default: "1.3.9"
    steps:
      - restore_cache:
          keys:
          - &sbt_cache_key sbt-{{ checksum "project/build.properties" }}

      - run:
          name: Setup SBT
          command: |
                    if [ ! -x ~/sbt/bin/sbt ]; then
                      cd ~/
                      curl --silent -L -o sbt.tgz https://piccolo.link/sbt-<< parameters.sbt_version >>.tgz
                      tar -xzvf sbt.tgz && rm -f sbt.tgz
                    fi

      - save_cache:
          paths:
            - ~/.sbt
          key: *sbt_cache_key

  build_n_test:
    description: Build & Run tests
    parameters:
      variant:
        type: string
        default: ""
      scala_version:
        type: string
        default: "2.13.2"
      ws_version:
        type: string
        default: ""
      play_version:
        type: string
        default: ""
      play_json_version:
        type: string
        default: ""
      modules: # space separated
        type: string
        default: "core"

    steps:
      - restore_cache:
          keys:
          - &scala_cache_key scala-{{ .Environment.CIRCLE_JOB }}-{{ checksum "version.sbt" }}-{{ checksum "build.sbt" }}-{{ checksum "project/Common.scala" }}

      - run:
          name: Build and test; << parameters.scala_version >>, << parameters.variant >> (<< parameters.modules >>)
          command: |
                    export SCALA_VERSION="<< parameters.scala_version >>"

                    PV="<< parameters.play_version >>"
                    if [ ! "x$PV" = "x" ]; then
                      export PLAY_VERSION="$PV"
                    fi
                    
                    JV="<< parameters.play_json_version >>"
                    if [ ! "x$JV" = "x" ]; then
                      export PLAY_JSON_VERSION="$JV"
                    fi
                    
                    WV="<< parameters.ws_version >>"
                    if [ ! "x$WV" = "x" ]; then
                      export WS_VERSION="$WV"
                    fi

                    export SBT_TEST_PROJECTS="<< parameters.modules >>"

                    ./.ci_scripts/retry.sh 3 ./.ci_scripts/validate.sh

      - save_cache:
          paths:
            - ~/.ivy2
            - ~/.sbt
            - ~/.coursier/cache
          key: *scala_cache_key

  collect_test_reports:
    description: Collect test reports
    steps:
      - run:
          name: Collect test report
          command: |
                    mkdir test-reports
                    find . -path '*/test-reports/*' -name '*.xml' \
                      -print -exec cp {} test-reports \;
          when: always

  test_suite:
    description: Test suite

    parameters:
      variant:
        type: string
        default: ""
      scala_version:
        type: string
        default: "2.13.2"
      ws_version:
        type: string
        default: ""
      play_version:
        type: string
        default: ""
      play_json_version:
        type: string
        default: ""
      modules: # space separated
        type: string
        default: "core"

    steps:
      - checkout
      - setup_sbt
      - build_n_test:
          scala_version: << parameters.scala_version >>
          ws_version: << parameters.ws_version >>
          play_version: << parameters.play_version >>
          play_json_version: << parameters.play_json_version >>
          variant: << parameters.variant >>

      - collect_test_reports
      - store_test_results:
          path: test-reports

  publish_snapshots:
    parameters:
      release_suffix:
        type: string
        default: ""
      play_version:
        type: string
        default: ""
      play_json_version:
        type: string
        default: ""
      ws_version:
        type: string
        default: ""
      scala_versions:
        type: string
        default: ""
    description: Publish artifacts << parameters.release_suffix >> to Snapshots repository
    steps:
      - deploy:
          name: Publish artifacts to Sonatype Snapshots
          command: |
                    if [ ! "${CIRCLE_BRANCH}" = "master" ]; then
                      echo "Skipped on branch ${CIRCLE_BRANCH}"
                      exit 0
                    fi
                    
                    export PUBLISH_REPO_NAME="Sonatype Nexus Repository Manager"
                    export PUBLISH_REPO_ID="oss.sonatype.org"
                    export PUBLISH_REPO_URL="https://oss.sonatype.org/content/repositories/snapshots"
                    
                    if [ "x$PUBLISH_USER" = "x" -o "x$PUBLISH_PASS" = "x" ]; then
                      echo "Missing publication credentials"
                      exit 1
                    fi
                    
                    export RELEASE_SUFFIX="<< parameters.release_suffix >>"
                    export PLAY_VERSION="<< parameters.play_version >>"
                    export PLAY_JSON_VERSION="<< parameters.play_json_version >>"
                    export WS_VERSION="<< parameters.ws_version >>"
                    
                    echo "Publishing artifacts for $PLAY_VERSION"
                    
                    if [ "x<< parameters.scala_versions >>" = "x" ]; then
                      sbt +publish
                    else
                      for V in `echo "<< parameters.scala_versions >>"`; do
                        sbt ++$V publish
                      done
                    fi

jobs:
  scala211_jdk8:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo
    
    steps:
      - test_suite:
          scala_version: 2.11.12
          variant: Play 2.6, WS 1.1

  scala212_play27_jdk8:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    steps:
      - test_suite:
          scala_version: 2.12.11
          ws_version: 2.0.6
          play_version: 2.7.1
          variant: Play 2.7, WS 2.0

  scala213_play28_jdk9:
    docker:
      - image: circleci/openjdk:9-jdk

    working_directory: ~/repo

    steps:
      - test_suite:
          scala_version: 2.13.2
          ws_version: 2.1.2
          play_version: 2.8.0
          play_json_version: 2.8.1
          variant: Play 2.8, WS 2.1

  publish_snapshots:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    steps:
      - checkout
      - setup_sbt

      - restore_cache:
          keys:
          - *scala_cache_key

      - publish_snapshots:
          release_suffix: play26
          play_version: 2.6.7
          play_json_version: 2.6.7
          ws_version: 1.1.6
          scala_versions: 2.11.12 2.12.11

      - publish_snapshots:
          release_suffix: play27
          play_version: 2.7.1
          play_json_version: 2.7.4
          ws_version: 2.0.6
          scala_versions: 2.12.11

      - publish_snapshots:
          release_suffix: play27
          play_version: 2.7.4
          play_json_version: 2.7.4
          ws_version: 2.0.6
          scala_versions: 2.13.2

      - publish_snapshots:
          release_suffix: play28
          play_version: 2.8.0
          play_json_version: 2.8.1
          ws_version: 2.1.2
          scala_versions: 2.13.2

      - save_cache:
          paths:
            - ~/.ivy2
            - ~/.sbt
            - ~/.coursier/cache
          key: *scala_cache_key

workflows:
  version: 2

  main_suite:
    jobs:
      - scala211_jdk8
      - scala212_play27_jdk8:
          requires:
            - scala211_jdk8 # Workaround for sequential storage access
      - scala213_play28_jdk9:
          requires:
            - scala212_play27_jdk8 # Workaround for sequential storage access

      - publish_snapshots:
          filters:
            branches:
              only:
                - master
          requires:
            - scala211_jdk8
            - scala212_play27_jdk8
            - scala213_play28_jdk9
